#version 450

layout(set = 0, binding = 0, rgba8) uniform writeonly image2D outColor;
layout(set = 0, binding = 1) uniform sampler2D sourceTexture;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
void main()
{
	ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 ssaoSize = imageSize(outColor);
    vec2 uv = (vec2(pixelCoord) + vec2(0.5f)) / vec2(ssaoSize);

    const int blurRange = 2;
    int n = 0;
    vec2 texelSize = 1.0f / vec2(textureSize(sourceTexture, 0));
    float result = 0.0f;
    for (int x = -blurRange; x <= blurRange; x++)
    {
        for (int y = -blurRange; y <= blurRange; y++) 
        {
            vec2 offset = vec2(float(x), float(y)) * texelSize;
            result += texture(sourceTexture, uv + offset).r;
            n++;
        }
    }

    imageStore(outColor, pixelCoord, vec4(result / (float(n))));
}
